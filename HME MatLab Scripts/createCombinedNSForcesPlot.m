%   Creates an combined and color-coded errorbar plot
%   Also assumes subjects are sorted columnwise:
%   in the SubjectData cell
% Author: Jasmin E. Palmer

function [combinedNSForcesPlot] = createCombinedNSForcesPlot(...
    indexNP1,indexNP2,indexNP3,...
    indexSP1,indexSP2,indexSP3,...
    thumbNP1,thumbNP2,thumbNP3,...
    thumbSP1,thumbSP2,thumbSP3,...
    plotTitle, xAxisLabel, yAxisLabel)

%Pull variables from workspace
trainingMap1Color = evalin('base','trainingMap1Color');
testingMap1Color = evalin('base','testingMap1Color');
trainingMap3Color = evalin('base','trainingMap3Color');
testingMap3Color = evalin('base','testingMap3Color');
trainingMap5Color = evalin('base','trainingMap5Color');
testingMap5Color = evalin('base','testingMap5Color');

boxTrainingColor = evalin('base','boxTrainingColor');
boxTestingColor = evalin('base','boxTestingColor');

jitterVal = evalin('base','jitterVal');
numMappings = evalin('base','numMappings');

markerSize = evalin('base', 'markerSize');

dataSeparation = 0.5;

normalPlotMarker = "s";
shearPlotMarker = "d";

numCols = 2;

% vec1 = (1:numMappings)-jitterVal;
% vec2 = (1:numMappings)+jitterVal;
% vec3 = (1:numMappings)+2*jitterVal;
vec1 = (1:numMappings)-2.0*jitterVal;
vec2 = (1:numMappings);
vec3 = (1:numMappings)+2.0*jitterVal;

% vec4 = numMappings+(1:numMappings)-jitterVal+dataSeparation;
% vec5 = numMappings+(1:numMappings)+jitterVal+dataSeparation;
% vec6 = numMappings+(1:numMappings)+2*jitterVal+dataSeparation;
vec4 = numMappings+(1:numMappings)-2.0*jitterVal+dataSeparation;
vec5 = numMappings+(1:numMappings)+dataSeparation;
vec6 = numMappings+(1:numMappings)+2.0*jitterVal+dataSeparation;

% Index Normal Training 1
h1 = errorbar(vec1, ...
    indexNP1.YData, indexNP1.YNegativeDelta, indexNP1.YPositiveDelta, ...
    normalPlotMarker, "MarkerFaceColor", str2num(testingMap1Color), ...
    "Color", str2num(testingMap1Color), "MarkerSize", markerSize, ...
    "LineWidth", 2);   hold on;
% Index Shear Training 1
h2 = errorbar(vec1+0.5*jitterVal,...
    indexSP1.YData, indexSP1.YNegativeDelta, indexSP1.YPositiveDelta, ...
    shearPlotMarker, "MarkerFaceColor", str2num(testingMap1Color), ...
    "Color", str2num(testingMap1Color), "MarkerSize", markerSize, ...
    "LineWidth", 2); hold on;
% Index Normal Training 2
h3 = errorbar(vec2, ...
    indexNP2.YData, indexNP2.YNegativeDelta, indexNP2.YPositiveDelta, ...
    normalPlotMarker, "MarkerFaceColor", str2num(trainingMap1Color), ...
    "Color", str2num(trainingMap1Color), "MarkerSize", markerSize, ...
    "LineWidth", 2);   hold on;
% Index Shear Training 2
h4 = errorbar(vec2+0.5*jitterVal,...
    indexSP2.YData, indexSP2.YNegativeDelta, indexSP2.YPositiveDelta, ...
    shearPlotMarker, "MarkerFaceColor", str2num(trainingMap1Color), ...
    "Color", str2num(trainingMap1Color), "MarkerSize", markerSize, ...
    "LineWidth", 2); hold on;
% Index Normal Testing
h5 = errorbar(vec3, ...
    indexNP3.YData, indexNP3.YNegativeDelta, indexNP3.YPositiveDelta, ...
    normalPlotMarker, "MarkerFaceColor", str2num(trainingMap5Color), ...
    "Color", str2num(trainingMap5Color), "MarkerSize", markerSize, ...
    "LineWidth", 2);   hold on;
% Index Shear Testing
h6 = errorbar(vec3+0.5*jitterVal,...
    indexSP3.YData, indexSP3.YNegativeDelta, indexSP3.YPositiveDelta, ...
    shearPlotMarker, "MarkerFaceColor", str2num(trainingMap5Color), ...
    "Color", str2num(trainingMap5Color), "MarkerSize", markerSize, ...
    "LineWidth", 2); hold on;


% Thumb Normal Training 1
h7 = errorbar(vec4, ...
    thumbNP1.YData, thumbNP1.YNegativeDelta, thumbNP1.YPositiveDelta, ...
    normalPlotMarker, "MarkerFaceColor", str2num(testingMap3Color), ...
    "Color", str2num(testingMap3Color), "MarkerSize", markerSize, ...
    "LineWidth", 2);   hold on;
% Thumb Shear Training 1
h8 = errorbar(vec4+0.5*jitterVal,...
    thumbSP1.YData, thumbSP1.YNegativeDelta, thumbSP1.YPositiveDelta, ...
    shearPlotMarker, "MarkerFaceColor", str2num(testingMap3Color), ...
    "Color", str2num(testingMap3Color), "MarkerSize", markerSize, ...
    "LineWidth", 2); hold on;
% Thumb Normal Training 2
h9 = errorbar(vec5, ...
    thumbNP2.YData, thumbNP2.YNegativeDelta, thumbNP2.YPositiveDelta, ...
    normalPlotMarker, "MarkerFaceColor", str2num(trainingMap3Color), ...
    "Color", str2num(trainingMap3Color), "MarkerSize", markerSize, ...
    "LineWidth", 2);   hold on;
% Thumb Shear Training 2
h10 = errorbar(vec5+0.5*jitterVal,...
    thumbSP2.YData, thumbSP2.YNegativeDelta, thumbSP2.YPositiveDelta, ...
    shearPlotMarker, "MarkerFaceColor", str2num(trainingMap3Color), ...
    "Color", str2num(trainingMap3Color), "MarkerSize", markerSize, ...
    "LineWidth", 2); hold on;
% Thumb Normal Testing
h11 = errorbar(vec6, ...
    thumbNP3.YData, thumbNP3.YNegativeDelta, thumbNP3.YPositiveDelta, ...
    normalPlotMarker, "MarkerFaceColor", str2num(testingMap5Color), ...
    "Color", str2num(testingMap5Color), "MarkerSize", markerSize, ...
    "LineWidth", 2);   hold on;
% Thumb Shear Testing
h12 = errorbar(vec6+0.5*jitterVal,...
    thumbSP3.YData, thumbSP3.YNegativeDelta, thumbSP3.YPositiveDelta, ...
    shearPlotMarker, "MarkerFaceColor", str2num(testingMap5Color), ...
    "Color", str2num(testingMap5Color), "MarkerSize", markerSize, ...
    "LineWidth", 2); hold on;

%Line to separate thumb and box plots
halfline = (vec3(end)+ vec4(1))/2;
xline(halfline)

legend([h1(1), h2(1), h3(1), h4(1),...
    h5(1), h6(1) h7(1), h8(1),...
    h9(1), h10(1) h11(1), h12(1)],...
    "Index Normal Training 1", ...
    "Index Shear Training 1", ...
    "Index Normal Training 2", ...
    "Index Shear Training 2", ...
    "Index Normal Testing", ...
    "Index Shear Testing", ...
    "Thumb Normal Training 1", ...
    "Thumb Shear Training 1", ...
    "Thumb Normal Training 2", ...
    "Thumb Shear Training 2", ...
    "Thumb Normal Testing", ...
    "Thumb Shear Testing", ...
    "Location", "northoutside",...
    "NumColumns",3);

xTickVals = [0, 1:numMappings, (numMappings+1:2*numMappings)+dataSeparation];


%Plot Details
n=numCols;
% xlim([0 max(xTickVals)+dataSeparation]);
xlim([0 2*halfline]);

tickLabels = [" ", repmat(["Dual Tactor", "Single Tactor", "Control"], 1, n)];
xticks(xTickVals);
set(gca, 'xTick', xTickVals, 'xticklabel', tickLabels); %#ok<NBRAK>
% xticks(0:(6*n-n));
% set(gca,'xTick', [0:(6*n-n)],'xticklabel', tickLabels); %#ok<NBRAK>
% set(gca,'xticklabel', tickLabels); %#ok<NBRAK>
xlabel(xAxisLabel); ylabel(yAxisLabel);
title(plotTitle);
hold off;

end


